/*
===============================================================================

Reverse Rosu-Havelund algorithm.
Interprets and evaluates LTL formulae over a finite trace.

The EvaluationResult class is a composition of fields detailing the result of
evaluating a formula 

===============================================================================

Copyright (C) 2021  Richard John Allen

This library is free software; you can redistribute it and/or
modify it under the terms of the GNU Lesser General Public
License as published by the Free Software Foundation; either
version 2.1 of the License, or (at your option) any later version.

This library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public
License along with this library; if not, write to the Free Software
Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA

===============================================================================
*/

package reverserosuhavelund;

import java.util.ArrayList;

public class EvaluationResult {
    private String message;
    private ArrayList<TraceEvent> satisfyingEvents;

    public EvaluationResult(String message) {
        this.message = message;
        this.satisfyingEvents = new ArrayList<TraceEvent>();
    }

    public boolean Satisfied() { return this.satisfyingEvents.size() > 0; }

    public String Message() { return this.message; }

    public void SetSatisfyingEvents(ArrayList<TraceEvent> events) {
    	this.satisfyingEvents = (events != null) ? events : new ArrayList<TraceEvent>(); 
    }
    
    public ArrayList<TraceEvent> SatisfyingEvents() { return this.satisfyingEvents; }
}


